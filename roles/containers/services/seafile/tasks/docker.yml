---
- name: Make sure the MariaDB container is created and running
  docker_container:
    name: "{{ container_name }}-mariadb"
    image: "mariadb:latest"
    pull: yes
    networks:
      - name: traefik-proxy
    command: "--transaction-isolation=READ-COMMITTED --binlog-format=ROW --skip-innodb-read-only-compressed --innodb-read-only-compressed=OFF"
    state: 'started'
    labels:
      "flame.type": "application"
      "flame.name": "{{ container_name | title }}"
      "flame.url": "{{ dashboard_url }}"
      "flame.icon": "custom"

      # Watchtower Update
      "com.centurylinklabs.watchtower.enable": "true"
    env:
      "PUID": "{{ guid }}"
      "PGID": "{{ guid }}"
      "TZ": "{{ timezone }}"
      "MYSQL_ROOT_PASSWORD": "{{ mysql_root_password }}"
      "MYSQL_DATABASE": "{{ mysql_db }}"
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/mariadb/mysql:/var/lib/mysql"
    restart_policy: unless-stopped

- name: Make sure the memcached container is created and running
  docker_container:
    name: "{{ container_name }}-memcached"
    image: "memcached:latest"
    pull: yes
    networks:
      - name: traefik-proxy
    entrypoint: "memcached -m 256"
    state: 'started'
    labels:
        # Watchtower Update
        "com.centurylinklabs.watchtower.enable": "true"
    restart_policy: unless-stopped

- name: Make sure the Seafile container is created and running
  docker_container:
    name: "{{ container_name }}"
    image: "seafileltd/seafile-mc:latest"
    pull: yes
    networks:
      - name: traefik-proxy
    state: 'started'
    env:
      "PUID": "{{ guid }}"
      "PGID": "{{ guid }}"
      "TZ": "{{ timezone }}"
      "DB_HOST": "{{ container_name }}-mariadb"
      "DB_ROOT_PASSWD": "{{ mysql_root_password }}"
      "SEAFILE_ADMIN_EMAIL": "{{ email }}"
      "SEAFILE_ADMIN_PASSWORD": "{{ seafile_password }}"
      "SEAFILE_SERVER_LETSENCRYPT": "false"
      "SEAFILE_SERVER_HOSTNAME": "{{ container_name}}.{{ host }}"
      "SEAFILE_SERVICE_URL": "https://{{ container_name }}.{{ host }}"
      "SEAFULE_USE_HTTPS": "1"
    volumes:
      - "{{ mergerfs_root }}/{{ container_name }}/storage:/shared/seafile"
    labels:
      "traefik.enable": "true"
      "traefik.docker.network": "traefik-proxy"

      "traefik.http.routers.seafile.rule": "Host(`{{ container_name }}.{{ host }}`)"

      # "traefik.http.routers.seafile.middlewares": "corsheader@file"
      # "traefik.http.routers.seafile.middlewares": "authelia@docker"
      
    restart_policy: unless-stopped