apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tdarr.fullname" . }}
  labels:
    {{- include "tdarr.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tdarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tdarr.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tdarr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: webui
              containerPort: {{ .Values.service.webUI.targetPort }}
              protocol: TCP
            - name: server
              containerPort: {{ .Values.service.server.targetPort }}
              protocol: TCP
          env:
            - name: serverIP
              value: "{{ .Values.env.serverIP }}"
            - name: serverPort
              value: "{{ .Values.env.serverPort }}"
            - name: webUIPort
              value: "{{ .Values.env.webUIPort }}"
            - name: internalNode
              value: "{{ .Values.env.internalNode }}"
            - name: inContainer
              value: "{{ .Values.env.inContainer }}"
            - name: ffmpegVersion
              value: "{{ .Values.env.ffmpegVersion }}"
            - name: nodeName
              value: "{{ .Values.env.nodeName }}"
            - name: TZ
              value: "{{ .Values.env.TZ }}"
            - name: PUID
              value: "{{ .Values.env.PUID }}"
            - name: PGID
              value: "{{ .Values.env.PGID }}"
            {{- if .Values.gpu.nvidia.enabled }}
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "{{ .Values.env.NVIDIA_DRIVER_CAPABILITIES }}"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "{{ .Values.env.NVIDIA_VISIBLE_DEVICES }}"
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            {{- range .Values.persistence.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        {{- range .Values.persistence.volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ include "tdarr.fullname" $ }}-{{ .name }}
        {{- end }}
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.gpu.nvidia.enabled }}
      runtimeClassName: {{ .Values.gpu.nvidia.runtime }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
